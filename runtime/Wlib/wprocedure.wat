;*=====================================================================*/
;*    serrano/prgm/project/bigloo/wasm/runtime/Wlib/wprocedure.wat     */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jan  5 08:42:14 2025                          */
;*    Last change :  Sun Jun 22 09:18:18 2025 (serrano)                */
;*    Copyright   :  2025 Manuel Serrano                               */
;*    -------------------------------------------------------------    */
;*    WASM procedure and funcall                                       */
;*=====================================================================*/

(module $__bigloo_procedure
   
   ;; -----------------------------------------------------------------
   ;; Type declarations 
   ;; -----------------------------------------------------------------
   
   (type $procedure (struct 
		       (field $entry (ref func))
		       (field $attr (mut (ref eq)))
		       (field $arity i32)
		       (field $env (ref null $vector))))
   ;;(type $tmpfun (struct (field (ref func))))
   
   (type $procedure-l (struct
			 (field $entry (ref func))
			 (field $env (ref null $vector))))
   (type $procedure-el (array (mut (ref eq))))
   
   ;; Functions types (for closures and variadic calls)
   (type $func0 (func (param (ref $procedure)) (result (ref eq))))
   (type $func1 (func (param (ref $procedure)) (param (ref eq)) (result (ref eq))))
   (type $func2 (func (param (ref $procedure)) (param (ref eq) (ref eq)) (result (ref eq))))
   (type $func3 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func4 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func5 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func6 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func7 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func8 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func9 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func10 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func11 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func12 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func13 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func14 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func15 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func16 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func17 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func18 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func19 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func20 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func21 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func22 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func23 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func24 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func25 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func26 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func27 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func28 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func29 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func30 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func31 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func32 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   (type $func33 (func (param (ref $procedure)) (param (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq) (ref eq)) (result (ref eq))))
   
   ;; -----------------------------------------------------------------
   ;; Global variables 
   ;; -----------------------------------------------------------------
   
   (global $procedure-default-value
      (export "BGL_PROCEDURE_DEFAULT_VALUE") (ref $procedure)
      (struct.new $procedure
	 ;; entry
	 (ref.func $BOOLEANP)
	 ;; attr
	 (global.get $BUNSPEC)
	 ;; arity
	 (i32.const 0)
	 ;; env
	 (global.get $vector-default-value)))
   (global $procedure-l-default-value
      (export "BGL_PROCEDURE_L_DEFAULT_VALUE") (ref $procedure-l)
      (struct.new $procedure-l
	 ;; entry
	 (ref.func $BOOLEANP)
	 ;; env
	 (global.get $vector-default-value)))
   (global $procedure-el-default-value
      (export "BGL_PROCEDURE_EL_DEFAULT_VALUE") (ref $procedure-el)
      (array.new_fixed $procedure-el 0))
   
   ;; --------------------------------------------------------
   ;; Procedure functions
   ;; --------------------------------------------------------
   
   (func $MAKE_FX_PROCEDURE (export "MAKE_FX_PROCEDURE")
      (param $entry (ref func))
      (param $arity i32)
      (param $size i32)
      (result (ref $procedure))
      (struct.new $procedure
	 (local.get $entry)
	 (global.get $BUNSPEC)
	 (local.get $arity)
	 (array.new $vector (global.get $BUNSPEC) (local.get $size))))

   (func $MAKE_VA_PROCEDURE (export "MAKE_VA_PROCEDURE")
      ;; an alias to MAKE_FX_PROCEDURE
      (param $entry (ref func))
      (param $arity i32)
      (param $size i32)
      (result (ref $procedure))
      (return_call
	 $MAKE_FX_PROCEDURE
	 (local.get $entry) (local.get $arity) (local.get $size)))
   
   (func $MAKE_L_PROCEDURE (export "MAKE_L_PROCEDURE")
      (param $entry (ref func))
      (param $size i32)
      (result (ref $procedure-l))
      (struct.new $procedure-l
	 (local.get $entry)
	 (array.new $vector (global.get $BUNSPEC) (local.get $size))))
   
   (func $MAKE_EL_PROCEDURE (export "MAKE_EL_PROCEDURE")
      (param $size i32)
      (result (ref $procedure-el))
      (array.new $procedure-el (global.get $BUNSPEC) (local.get $size)))
   
   (global $procedure-el-empty (export "BGL_PROCEDURE_EL_EMPTY")
      (ref $procedure-el)
      (array.new_fixed $procedure-el 0))
   
   (func $PROCEDURE_CORRECT_ARITYP (export "PROCEDURE_CORRECT_ARITYP")
      (param $p (ref $procedure)) 
      (param $i i32) 
      (result i32)
      (local $arity i32)
      (local.set $arity (struct.get $procedure $arity (local.get $p)))
      ;; (arity == i) || ((arity < 0) && (-i - 1 <= arity))
      (i32.or 
	 (i32.eq (local.get $arity) (local.get $i))
	 (i32.and 
	    (i32.lt_s (local.get $arity) (i32.const 0))
	    (i32.le_s (i32.sub (i32.const -1) (local.get $i)) (local.get $arity)))))
   
   (func $PROCEDURE_SET (export "PROCEDURE_SET") 
      (param $p (ref $procedure)) 
      (param $i i32) 
      (param $v (ref eq)) 
      (result (ref eq))
      (array.set $vector (struct.get $procedure $env (local.get $p)) (local.get $i) (local.get $v))
      (global.get $BUNSPEC))
   
   (func $PROCEDURE_REF (export "PROCEDURE_REF") 
      (param $p (ref $procedure)) 
      (param $i i32) 
      (result (ref eq))
      (array.get $vector (struct.get $procedure $env (local.get $p)) (local.get $i)))
   
   (func $PROCEDURE_L_SET (export "PROCEDURE_L_SET") 
      (param $p (ref $procedure-l)) 
      (param $i i32)
      (param $v (ref eq)) 
      (result (ref eq))
      (array.set $vector (struct.get $procedure-l $env (local.get $p)) (local.get $i) (local.get $v))
      (global.get $BUNSPEC))
   
   (func $PROCEDURE_L_REF (export "PROCEDURE_L_REF") 
      (param $p (ref $procedure-l)) 
      (param $i i32) 
      (param $v (ref eq)) 
      (result (ref eq))
      (array.get $vector (struct.get $procedure-l $env (local.get $p)) (local.get $i)))
   
   (func $PROCEDURE_EL_SET (export "PROCEDURE_EL_SET") 
      (param $p (ref $procedure-el)) 
      (param $i i32) 
      (param $v (ref eq)) 
      (result (ref eq))
      (array.set $procedure-el (local.get $p) (local.get $i) (local.get $v))
      (global.get $BUNSPEC))
   
   (func $PROCEDURE_EL_REF (export "PROCEDURE_EL_REF") 
      (param $p (ref $procedure-el)) 
      (param $i i32) 
      (result (ref eq))
      (array.get $procedure-el (local.get $p) (local.get $i)))
   
   (func $PROCEDURE_ATTR_SET (export "PROCEDURE_ATTR_SET") 
      (param $p (ref $procedure)) 
      (param $v (ref eq)) 
      (result (ref eq))
      (struct.set $procedure $attr (local.get $p) (local.get $v))
      (global.get $BUNSPEC))
   
   ;; --------------------------------------------------------
   ;; funcall
   ;; --------------------------------------------------------
   (func $funcall0
      (param $proc (ref $procedure))
      (result (ref eq))
      (return_call_ref $func0
	 (local.get $proc)
	 (ref.cast (ref $func0)
	    (struct.get $procedure $entry (local.get $proc)))))
   
   (func $funcall1
      (param $proc (ref $procedure))
      (param $arg0 (ref eq))
      (result (ref eq))
      (return_call_ref $func1
	 (local.get $proc)
	 (local.get $arg0)
	 (ref.cast (ref $func1)
	    (struct.get $procedure $entry (local.get $proc)))))
   
   
   (func $funcall2
      (param $proc (ref $procedure))
      (param $arg0 (ref eq))
      (param $arg1 (ref eq))
      (result (ref eq))
      (return_call_ref $func2
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (ref.cast (ref $func2)
	    (struct.get $procedure $entry (local.get $proc)))))
   
   (func $funcall3
      (param $proc (ref $procedure))
      (param $arg0 (ref eq))
      (param $arg1 (ref eq))
      (param $arg2 (ref eq))
      (result (ref eq))
      (return_call_ref $func3
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (ref.cast (ref $func3)
	    (struct.get $procedure $entry (local.get $proc)))))
   
   (func $funcall4
      (param $proc (ref $procedure))
      (param $arg0 (ref eq))
      (param $arg1 (ref eq))
      (param $arg2 (ref eq))
      (param $arg3 (ref eq))
      (result (ref eq))
      (return_call_ref $func4
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (ref.cast (ref $func4)
	    (struct.get $procedure $entry (local.get $proc)))))

   (func $funcall5
      (param $proc (ref $procedure))
      (param $arg0 (ref eq))
      (param $arg1 (ref eq))
      (param $arg2 (ref eq))
      (param $arg3 (ref eq))
      (param $arg4 (ref eq))
      (result (ref eq))
      (return_call_ref $func5
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (ref.cast (ref $func5)
	    (struct.get $procedure $entry (local.get $proc)))))
   
   ;; --------------------------------------------------------
   ;; Generic variadic call builtin functions
   ;; --------------------------------------------------------
   
   (func $make_list_params
      (param $params (ref $vector))
      (param $i i32)
      (result (ref eq))
      (local $len i32)
      (local $j i32)
      (local $list (ref eq))
      (local.set $list (global.get $BNIL))
      (local.set $len (array.len (local.get $params)))
      (local.set $j (i32.sub (local.get $len) (i32.const 1)))
      
      (block $break
	 (loop $continue
	    (if (i32.lt_s (local.get $j) (local.get $i))
		(then (br $break)))
	    (local.set $list
	       (struct.new $pair
		  (array.get $vector (local.get $params) (local.get $j))
		  (local.get $list)))
	    (local.set $j (i32.sub (local.get $j) (i32.const 1)))
	    (br $continue)))
      
      (local.get $list))

   ;; apply33
   (func $apply33
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local $arg30 (ref eq))
      (local $arg31 (ref eq))
      (local $arg32 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg30 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg31 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg32 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func33
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (local.get $arg28)
		   (local.get $arg29)
		   (local.get $arg30)
		   (local.get $arg31)
		   (local.get $arg32)
		   (ref.cast (ref $func33) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply32
   (func $apply32
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local $arg30 (ref eq))
      (local $arg31 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg30 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg31 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func32
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (local.get $arg28)
		   (local.get $arg29)
		   (local.get $arg30)
		   (local.get $arg31)
		   (ref.cast (ref $func32) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply31
   (func $apply31
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local $arg30 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg30 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func31
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (local.get $arg28)
		   (local.get $arg29)
		   (local.get $arg30)
		   (ref.cast (ref $func31) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply30
   (func $apply30
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func30
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (local.get $arg28)
		   (local.get $arg29)
		   (ref.cast (ref $func30) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply29
   (func $apply29
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func29
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (local.get $arg28)
		   (ref.cast (ref $func29) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply28
   (func $apply28
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func28
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (local.get $arg27)
		   (ref.cast (ref $func28) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply27
   (func $apply27
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func27
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (local.get $arg26)
		   (ref.cast (ref $func27) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply26
   (func $apply26
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func26
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (local.get $arg25)
		   (ref.cast (ref $func26) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply25
   (func $apply25
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func25
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (local.get $arg24)
		   (ref.cast (ref $func25) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply24
   (func $apply24
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func24
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (local.get $arg23)
		   (ref.cast (ref $func24) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply23
   (func $apply23
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func23
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (local.get $arg22)
		   (ref.cast (ref $func23) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply22
   (func $apply22
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func22
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (local.get $arg21)
		   (ref.cast (ref $func22) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply21
   (func $apply21
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func21
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (local.get $arg20)
		   (ref.cast (ref $func21) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply20
   (func $apply20
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func20
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (local.get $arg19)
		   (ref.cast (ref $func20) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply19
   (func $apply19
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func19
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (local.get $arg18)
		   (ref.cast (ref $func19) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply18
   (func $apply18
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func18
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (local.get $arg17)
		   (ref.cast (ref $func18) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply17
   (func $apply17
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func17
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (local.get $arg16)
		   (ref.cast (ref $func17) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply16
   (func $apply16
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func16
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (local.get $arg15)
		   (ref.cast (ref $func16) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply15
   (func $apply15
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func15
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (local.get $arg14)
		   (ref.cast (ref $func15) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply14
   (func $apply14
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func14
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (local.get $arg13)
		   (ref.cast (ref $func14) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply13
   (func $apply13
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func13
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (local.get $arg12)
		   (ref.cast (ref $func13) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply12
   (func $apply12
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func12
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (local.get $arg11)
		   (ref.cast (ref $func12) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))

   ;; apply11
   (func $apply11
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func11
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (local.get $arg10)
		   (ref.cast (ref $func11) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply10
   (func $apply10
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func10
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (local.get $arg9)
		   (ref.cast (ref $func10) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply9
   (func $apply9
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func9
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (local.get $arg8)
		   (ref.cast (ref $func9) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply8
   (func $apply8
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func8
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (local.get $arg7)
		   (ref.cast (ref $func8) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply7
   (func $apply7
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func7
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (local.get $arg6)
		   (ref.cast (ref $func7) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply6
   (func $apply6
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func6
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (local.get $arg5)
		   (ref.cast (ref $func6) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply5
   (func $apply5
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func5
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (local.get $arg4)
		   (ref.cast (ref $func5) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply4
   (func $apply4
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func4
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (local.get $arg3)
		   (ref.cast (ref $func4) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply3
   (func $apply3
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func3
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (local.get $arg2)
		   (ref.cast (ref $func3) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply2
   (func $apply2
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func2
		   (local.get $proc)
		   (local.get $arg0)
		   (local.get $arg1)
		   (ref.cast (ref $func2) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply1
   (func $apply1
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func1
		   (local.get $proc)
		   (local.get $arg0)
		   (ref.cast (ref $func1) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply0
   (func $apply0
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (if (ref.eq (local.get $args) (global.get $BNIL))
	  (then (return_call_ref $func0
		   (local.get $proc)
		   (ref.cast (ref $func0) (struct.get $procedure $entry (local.get $proc)))))
	  (else (throw $fail)))
      (unreachable))
   
   ;; apply_1
   (func $apply_1 
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (return_call_ref $func1
	 (local.get $proc)
	 (local.get $args)
	 (ref.cast (ref $func1) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_2
   (func $apply_2
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func2
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $args)
	 (ref.cast (ref $func2) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_3
   (func $apply_3
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func3
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $args)
	 (ref.cast (ref $func3) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_4
   (func $apply_4
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func4
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $args)
	 (ref.cast (ref $func4) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_5
   (func $apply_5
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func5
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $args)
	 (ref.cast (ref $func5) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_6
   (func $apply_6
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args))))
      (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func6
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $args)
	 (ref.cast (ref $func6) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_7
   (func $apply_7
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func7
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $args)
	 (ref.cast (ref $func7) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_8
   (func $apply_8
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func8
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $args)
	 (ref.cast (ref $func8) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_19
   (func $apply_19
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func19
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $args)
	 (ref.cast (ref $func19) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_9
   (func $apply_9
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func9
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $args)
	 (ref.cast (ref $func9) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_10
   (func $apply_10
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func10
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $args)
	 (ref.cast (ref $func10) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_11
   (func $apply_11
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func11
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $args)
	 (ref.cast (ref $func11) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_12
   (func $apply_12
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func12
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $args)
	 (ref.cast (ref $func12) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_13
   (func $apply_13
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func13
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $args)
	 (ref.cast (ref $func13) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_14
   (func $apply_14
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func14
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $args)
	 (ref.cast (ref $func14) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_15
   (func $apply_15
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func15
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $args)
	 (ref.cast (ref $func15) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_16
   (func $apply_16
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func16
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $args)
	 (ref.cast (ref $func16) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_17
   (func $apply_17
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func17
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $args)
	 (ref.cast (ref $func17) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_18
   (func $apply_18
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func18
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $args)
	 (ref.cast (ref $func18) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_20
   (func $apply_20
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func20
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $args)
	 (ref.cast (ref $func20) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_21
   (func $apply_21
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func21
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $args)
	 (ref.cast (ref $func21) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_22
   (func $apply_22
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func22
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $args)
	 (ref.cast (ref $func22) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_23
   (func $apply_23
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func23
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $args)
	 (ref.cast (ref $func23) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_24
   (func $apply_24
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func24
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $args)
	 (ref.cast (ref $func24) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_25
   (func $apply_25
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func25
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $args)
	 (ref.cast (ref $func25) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_26
   (func $apply_26
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func26
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $args)
	 (ref.cast (ref $func26) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_27
   (func $apply_27
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func27
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $args)
	 (ref.cast (ref $func27) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_28
   (func $apply_28
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func28
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $arg26)
	 (local.get $args)
	 (ref.cast (ref $func28) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_29
   (func $apply_29
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func29
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $arg26)
	 (local.get $arg27)
	 (local.get $args)
	 (ref.cast (ref $func29) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_30
   (func $apply_30
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func30
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $arg26)
	 (local.get $arg27)
	 (local.get $arg28)
	 (local.get $args)
	 (ref.cast (ref $func30) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply_31
   (func $apply_31
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func31
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $arg26)
	 (local.get $arg27)
	 (local.get $arg28)
	 (local.get $arg29)
	 (local.get $args)
	 (ref.cast (ref $func31) (struct.get $procedure $entry (local.get $proc)))))

   ;; apply_32
   (func $apply_32
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arg0 (ref eq))
      (local $arg1 (ref eq))
      (local $arg2 (ref eq))
      (local $arg3 (ref eq))
      (local $arg4 (ref eq))
      (local $arg5 (ref eq))
      (local $arg6 (ref eq))
      (local $arg7 (ref eq))
      (local $arg8 (ref eq))
      (local $arg9 (ref eq))
      (local $arg10 (ref eq))
      (local $arg11 (ref eq))
      (local $arg12 (ref eq))
      (local $arg13 (ref eq))
      (local $arg14 (ref eq))
      (local $arg15 (ref eq))
      (local $arg16 (ref eq))
      (local $arg17 (ref eq))
      (local $arg18 (ref eq))
      (local $arg19 (ref eq))
      (local $arg20 (ref eq))
      (local $arg21 (ref eq))
      (local $arg22 (ref eq))
      (local $arg23 (ref eq))
      (local $arg24 (ref eq))
      (local $arg25 (ref eq))
      (local $arg26 (ref eq))
      (local $arg27 (ref eq))
      (local $arg28 (ref eq))
      (local $arg29 (ref eq))
      (local $arg30 (ref eq))
      (local.set $arg0 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg1 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg2 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg3 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg4 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg5 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg6 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg7 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg8 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg9 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg10 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg11 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg12 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg13 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg14 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg15 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg16 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg17 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg18 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg19 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg20 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg21 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg22 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg23 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg24 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg25 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg26 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg27 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg28 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg29 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (local.set $arg30 (struct.get $pair $car (ref.cast (ref $pair) (local.get $args)))) (local.set $args (struct.get $pair $cdr (ref.cast (ref $pair) (local.get $args))))
      (return_call_ref $func32
	 (local.get $proc)
	 (local.get $arg0)
	 (local.get $arg1)
	 (local.get $arg2)
	 (local.get $arg3)
	 (local.get $arg4)
	 (local.get $arg5)
	 (local.get $arg6)
	 (local.get $arg7)
	 (local.get $arg8)
	 (local.get $arg9)
	 (local.get $arg10)
	 (local.get $arg11)
	 (local.get $arg12)
	 (local.get $arg13)
	 (local.get $arg14)
	 (local.get $arg15)
	 (local.get $arg16)
	 (local.get $arg17)
	 (local.get $arg18)
	 (local.get $arg19)
	 (local.get $arg20)
	 (local.get $arg21)
	 (local.get $arg22)
	 (local.get $arg23)
	 (local.get $arg24)
	 (local.get $arg25)
	 (local.get $arg26)
	 (local.get $arg27)
	 (local.get $arg28)
	 (local.get $arg29)
	 (local.get $arg30)
	 (local.get $args)
	 (ref.cast (ref $func32) (struct.get $procedure $entry (local.get $proc)))))
   
   ;; apply
   (func $apply (export "apply")
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (local $arity i32)
      (local.set $arity (struct.get $procedure $arity (local.get $proc)))
      (block $error
	 ;; see shift below
	 (block $-32
	    (block $-31
	       (block $-30
		  (block $-29
		     (block $-28
			(block $-27
			   (block $-26
			      (block $-25
				 (block $-24
				    (block $-23
				       (block $-22
					  (block $-21
					     (block $-20
						(block $-19
						   (block $-18
						      (block $-17
							 (block $-16
							    (block $-15
							       (block $-14
								  (block $-13
								     (block $-12
									(block $-11
									   (block $-10
									      (block $-9
										 (block $-8
										    (block $-7
										       (block $-6
											  (block $-5
											     (block $-4
												(block $-3
												   (block $-2
												      (block $-1
													 (block $0
													    (block $1
													       (block $2
														  (block $3
														     (block $4
															(block $5
															   (block $6
															      (block $7
																 (block $8
																    (block $9
																       (block $10
																	  (block $11
																	     (block $12
																		(block $13
																		   (block $14
																		      (block $15
																			 (block $16
																			    (block $17
																			       (block $18
																				  (block $19
																				     (block $20
																					(block $21
																					   (block $22
																					      (block $23
																						 (block $24
																						    (block $25
																						       (block $26
																							  (block $27
																							     (block $28
																								(block $29
																								   (block $30
																								      (block $31
																									 (block $32
																									    (block $33
																									       (br_table
																										  $-32 $-31 $-30
																										  $-29 $-28 $-27 $-26 $-25 $-24 $-23 $-22 $-21 $-20
																										  $-19 $-18 $-17 $-16 $-15 $-14 $-13 $-12 $-11 $-10
																										  $-9 $-8 $-7 $-6 $-5 $-4 $-3 $-2 $-1
																										  $0 $1 $2 $3 $4 $5 $6 $7 $8 $9
																										  $10 $11 $12 $13 $14 $15 $16 $17 $18 $19
																										  $20 $21 $22 $23 $24 $25 $26 $27 $28 $29
																										  $30 $31 $32 $33
																										  $error
																										  ;; see begining of interval above
																										  (i32.add (local.get $arity (i32.const 32)))))
																									    (return_call $apply33 (local.get $proc) (local.get $args)))
																									 (return_call $apply32 (local.get $proc) (local.get $args)))
																								      (return_call $apply31 (local.get $proc) (local.get $args)))
																								   (return_call $apply30 (local.get $proc) (local.get $args)))
																								(return_call $apply29 (local.get $proc) (local.get $args)))
																							     (return_call $apply28 (local.get $proc) (local.get $args)))
																							  (return_call $apply27 (local.get $proc) (local.get $args)))
																						       (return_call $apply26 (local.get $proc) (local.get $args)))
																						    (return_call $apply25 (local.get $proc) (local.get $args)))
																						 (return_call $apply24 (local.get $proc) (local.get $args)))
																					      (return_call $apply23 (local.get $proc) (local.get $args)))
																					   (return_call $apply22 (local.get $proc) (local.get $args)))
																					(return_call $apply21 (local.get $proc) (local.get $args)))
																				     (return_call $apply20 (local.get $proc) (local.get $args)))
																				  (return_call $apply19 (local.get $proc) (local.get $args)))
																			       (return_call $apply18 (local.get $proc) (local.get $args)))
																			    (return_call $apply17 (local.get $proc) (local.get $args)))
																			 (return_call $apply16 (local.get $proc) (local.get $args)))
																		      (return_call $apply15 (local.get $proc) (local.get $args)))
																		   (return_call $apply14 (local.get $proc) (local.get $args)))
																		(return_call $apply13 (local.get $proc) (local.get $args)))
																	     (return_call $apply12 (local.get $proc) (local.get $args)))
																	  (return_call $apply11 (local.get $proc) (local.get $args)))
																       (return_call $apply10 (local.get $proc) (local.get $args)))
																    (return_call $apply9 (local.get $proc) (local.get $args)))
																 (return_call $apply8 (local.get $proc) (local.get $args)))
															      (return_call $apply7 (local.get $proc) (local.get $args)))
															   (return_call $apply6 (local.get $proc) (local.get $args)))
															(return_call $apply5 (local.get $proc) (local.get $args)))
														     (return_call $apply4 (local.get $proc) (local.get $args)))
														  (return_call $apply3 (local.get $proc) (local.get $args)))
													       (return_call $apply2 (local.get $proc) (local.get $args)))
													    (return_call $apply1 (local.get $proc) (local.get $args)))
													 (return_call $apply0 (local.get $proc) (local.get $args)))
												      (return_call $apply_1 (local.get $proc) (local.get $args)))
												   (return_call $apply_2 (local.get $proc) (local.get $args)))
												(return_call $apply_3 (local.get $proc) (local.get $args)))
											     (return_call $apply_4 (local.get $proc) (local.get $args)))
											  (return_call $apply_5 (local.get $proc) (local.get $args)))
										       (return_call $apply_6 (local.get $proc) (local.get $args)))
										    (return_call $apply_7 (local.get $proc) (local.get $args)))
										 (return_call $apply_8 (local.get $proc) (local.get $args)))
									      (return_call $apply_9 (local.get $proc) (local.get $args)))
									   (return_call $apply_10 (local.get $proc) (local.get $args)))
									(return_call $apply_11 (local.get $proc) (local.get $args)))
								     (return_call $apply_12 (local.get $proc) (local.get $args)))
								  (return_call $apply_13 (local.get $proc) (local.get $args)))
							       (return_call $apply_14 (local.get $proc) (local.get $args)))
							    (return_call $apply_15 (local.get $proc) (local.get $args)))
							 (return_call $apply_16 (local.get $proc) (local.get $args)))
						      (return_call $apply_17 (local.get $proc) (local.get $args)))
						   (return_call $apply_18 (local.get $proc) (local.get $args)))
						(return_call $apply_19 (local.get $proc) (local.get $args)))
					     (return_call $apply_20 (local.get $proc) (local.get $args)))
					  (return_call $apply_21 (local.get $proc) (local.get $args)))
				       (return_call $apply_22 (local.get $proc) (local.get $args)))
				    (return_call $apply_23 (local.get $proc) (local.get $args)))
				 (return_call $apply_24 (local.get $proc) (local.get $args)))
			      (return_call $apply_25 (local.get $proc) (local.get $args)))
			   (return_call $apply_26 (local.get $proc) (local.get $args)))
			(return_call $apply_27 (local.get $proc) (local.get $args)))
		     (return_call $apply_28 (local.get $proc) (local.get $args)))
		  (return_call $apply_29 (local.get $proc) (local.get $args)))
	       (return_call $apply_30 (local.get $proc) (local.get $args)))
	    (return_call $apply_31 (local.get $proc) (local.get $args)))
	 (return_call $apply_32 (local.get $proc) (local.get $args)))
      (call $js_internal_error (i32.const 0) (local.get $arity))
      (throw $fail)
      (unreachable))

   (func $eval_apply (export "eval_apply")
      (param $proc (ref $procedure))
      (param $args (ref eq))
      (result (ref eq))
      (return_call $apply (local.get $proc) (local.get $args)))
   
   ;; generic_va_call
   (func $generic_va_call (export "generic_va_call")
      (param $proc (ref $procedure))
      (param $params (ref $vector))
      (result (ref eq))
      (local $entry (ref func))
      (local.set $entry (struct.get $procedure $entry (local.get $proc)))
      (block $error
	 (block $0
	    (block $1
	       (block $2
		  (block $3
		     (block $4
			(block $5
			   (br_table $0 $1 $2 $3 $4 $5 $error (i32.sub (i32.const -1) (struct.get $procedure $arity (local.get $proc)))))
			;; 5 mandatory arguments
			(return_call_ref $func6
			   (local.get $proc)
			   (array.get $vector (local.get $params) (i32.const 0))
			   (array.get $vector (local.get $params) (i32.const 1))
			   (array.get $vector (local.get $params) (i32.const 2))
			   (array.get $vector (local.get $params) (i32.const 3))
			   (array.get $vector (local.get $params) (i32.const 4))
			   (call $make_list_params (local.get $params) (i32.const 5))
			   (ref.cast (ref $func6) (local.get $entry))))
		     ;; 4 mandatory arguments
		     (return_call_ref $func5
			(local.get $proc)
			(array.get $vector (local.get $params) (i32.const 0))
			(array.get $vector (local.get $params) (i32.const 1))
			(array.get $vector (local.get $params) (i32.const 2))
			(array.get $vector (local.get $params) (i32.const 3))
			(call $make_list_params (local.get $params) (i32.const 4))
			(ref.cast (ref $func5) (local.get $entry))))
		  ;; 3 mandatory arguments
		  (return_call_ref $func4
		     (local.get $proc)
		     (array.get $vector (local.get $params) (i32.const 0))
		     (array.get $vector (local.get $params) (i32.const 1))
		     (array.get $vector (local.get $params) (i32.const 2))
		     (call $make_list_params (local.get $params) (i32.const 3))
		     (ref.cast (ref $func4) (local.get $entry))))
	       ;; 2 mandatory arguments
	       (return_call_ref $func3
		  (local.get $proc)
		  (array.get $vector (local.get $params) (i32.const 0))
		  (array.get $vector (local.get $params) (i32.const 1))
		  (call $make_list_params (local.get $params) (i32.const 2))
		  (ref.cast (ref $func3) (local.get $entry))))
	    ;; 1 mandatory argument
	    (return_call_ref $func2
	       (local.get $proc)
	       (array.get $vector (local.get $params) (i32.const 0))
	       (call $make_list_params (local.get $params) (i32.const 1))
	       (ref.cast (ref $func2) (local.get $entry))))
	 ;; 0 mandatory argument
	 (return_call_ref $func1
	    (local.get $proc)
	    (call $make_list_params (local.get $params) (i32.const 0))
	    (ref.cast (ref $func1) (local.get $entry))))
      (unreachable))
   
   )  
